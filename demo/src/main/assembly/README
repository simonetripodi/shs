  Copyright (c) 2012 Simone Tripodi (simonetripodi[at]apache[dot]org)

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to
  the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                               ${project.parent.name}
                                                     ----
                                               ${project.parent.inceptionYear}

  What is it?
  -----------

  ${project.parent.description}

  Licensing
  ---------

  Please see the file called LICENSE

  Documentation
  -------------

  The most up-to-date documentation can be found at ${project.parent.url}.

  Useful URLS
  ----------

  Home Page:          ${project.parent.url}/
  Source Code:        ${project.parent.scm.url}
  Issue Tracking:     ${project.parent.issueManagement.url}

  System Requirements
  -------------------

  JDK:
    ${javac.target.version} or above. (see http://www.oracle.com/technetwork/java/)
  Memory:
    No minimum requirement.
  Disk:
    No minimum requirement.
  Operating System:
    No minimum requirement. On Windows, Windows NT and above or Cygwin is required for
    the startup scripts. Tested on Windows XP, Fedora Core and Mac OS X.

  Installation
  ----------------

** Windows 2000/XP

  1) Unzip the distribution archive, i.e. ${project.build.finalName}.zip to the directory you wish to
        install ${project.parent.name} ${project.version}.
        These instructions assume you chose C:\Program Files.
        The subdirectory ${project.build.finalName} will be created from the archive.

  2) Add the SHS_HOME environment variable by opening up the system properties (WinKey + Pause),
        selecting the "Advanced" tab, and the "Environment Variables" button, then adding the SHS_HOME
        variable in the user variables with the value
        C:\Program Files\${project.build.finalName}.

  3) In the same dialog, add the SHS environment variable in the user variables with the value %SHS_HOME%\bin.

  4) In the same dialog, update/create the Path environment variable in the user variables and prepend the value
        %SHS% to add ${project.parent.name} available in the command line.

  5) In the same dialog, make sure that JAVA_HOME exists in your user variables or in the system variables and it is
        set to the location of your JDK, e.g. C:\Program Files\Java\1.6.0_31 and that %JAVA_HOME%\bin is in your Path
        environment variable.

  6) Open a new command prompt (Winkey + R then type cmd) and run shs --version to verify that it is correctly installed.

** Unix-based Operating Systems (Linux, Solaris and Mac OS X)

  1) Extract the distribution archive, i.e. ${project.build.finalName}.tar.gz to the directory you wish to
        install ${project.parent.name} ${project.version}.
        These instructions assume you chose /usr/local.
        The subdirectory ${project.build.finalName} will be created from the archive.

  2) In a command terminal, add the SHS_HOME environment variable, e.g.
        export SHS_HOME=/usr/local/${project.build.finalName}.

  3) Add the SHS environment variable, e.g. export SHS=$SHS_HOME/bin.

  4) Add SHS environment variable to your path, e.g. export PATH=$SHS:$PATH.

  5) Make sure that JAVA_HOME is set to the location of your JDK, e.g.
        export JAVA_HOME=/usr/java/1.6.0_31 and that $JAVA_HOME/bin is in your PATH environment variable.

  6) Run shs --version to verify that it is correctly installed.

  Execution
  ----------------

  Open the shell and type `shs -h` to see the available options:

+-------------------------------------------------------------------------------+
Usage: shs [options]
  Options:
    -h, --help              Display help information.
                            Default: false
    -H, --host              The host name or the textual representation of its
                            IP address.
                            Default: localhost
    -p, --port              The HTTP Server port.
                            Default: 8080
    -q, --quiet             Long errors only.
                            Default: false
    -m, --session-max-age   The maximum number of seconds of life of HTTP
                            Sessions.
                            Default: 3600
    -s, --sitedir           The directory containing the site has to be
                            provided.
                            Default: /usr/local/${project.build.finalName}/site
    -t, --threads           The number of thread (# of available processors by
                            default).
                            Default: 4
    -X, --verbose           Produce execution debug output.
                            Default: false
    -v, --version           Display version information.
                            Default: false
+-------------------------------------------------------------------------------+

  For the demo purpose, would be enough typing `shs -t 20 -X` then
  open the browser and go on `http://localhost:8080`
